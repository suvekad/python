------ PYTHON VARIABLE ------
It is like a labelled box where we can store information, manipulate and reference data in programs.
Example:
X=10
Here,   ‘ X ‘  is a variable

------ PYTHON COMMENTS ------
Comments used to explain code 
They do not execute while running program
‘ # ‘ is used for single line comment
( ‘ ‘ ‘  or “ ” ” ) used for multiline string
Example:
# this is comment
‘ ‘ ‘  this is a example 
           Of python comments ‘ ‘ ‘ 
           
------ DATA TYPES ------
Data types help define what kind of information a variable hold
INTEGER: ( int ) for whole numbers
FLOAT: ( float ) for decimal numbers
STRING: ( str ) for text
BOOLEAN: ( boolean ) for true/false values
LIST: ( [] ) for ordered collections
TUPLE: ( () ) for immutable ordered collections
DICTIONARIES: ( {key: value} ) for key value pair
SETS: ( {} ) for unique unordered values

------ PYTHON OPERATORS ------
Operators are used to perform operations on variables and values.
They are:
•	Arithmetic operators
•	Assignment operators
•	Comparison operators
•	Logical operators
•	Identity operators
•	Membership operators
•	Bitwise operators
------ ARITHMETIC OPERATORS ------
Operator				Name				Example
+					Addition			  x + y	
-					Subtraction			  x - y	
*					Multiplication			  x * y	
/					Division			  x / y	
%					Modulus			          x % y	
**					Exponentiation			  x ** y	
//					Floor division			  x // y	
------ RELEATIONAL OR COMPARISON OPERATORS ------
Operator				Name				Example
==					Equal				  x == y	
!=					Not equal			  x != y	
>					Greater than			  x > y	
<					Less than			  x < y	
>=					Greater than or equal to	  x >= y	
<=					Less than or equal to		  x <= y
------ LOGICAL OPERATORS ------
Operator		           Description					Example
and 	                Returns True if both statements are true		x < 5 and  x < 10	
or		     Returns True if one of the statements is true		x < 5 or x < 4	
not		     Reverse the result, returns False if the result is true	not(x < 5 and x < 10)


------ ASSIGNMENT OPERATORS ------
Operator				  Example				          Same As
=					x = 5					   x = 5	
+=					x += 3					   x = x + 3	
-=					x -= 3					   x = x - 3	
*=					x *= 3					   x = x * 3	
/=					x /= 3					   x = x / 3	
%=					x %= 3					   x = x % 3	
//=					x //= 3					   x = x // 3	
**=					x **= 3					   x = x ** 3	
&=					x &= 3					   x = x & 3	
|=					x |= 3					   x = x | 3	
^=					x ^= 3					   x = x ^ 3	
>>=				        x >>= 3				           x = x >> 3
<<=				        x <<= 3					   x = x << 3
------ BITWISE OPERATORS ------
Operator        Name		           Description			                                            Example
& 		AND		           Sets each bit to 1 if both bits are 1	                      x & y	
|		OR		           Sets each bit to 1 if one of two bits is 1	                      x | y	
^		XOR		           Sets each bit to 1 if only one of two bits is 1	           x ^ y	
~		NOT		           Inverts all the bits	                                            ~x	
<<		Zero fill left shift       Shift left by pushing zeros in from the right and let the leftmost bits fall off	x << 2	
>>		Signed right shift	    Shift right by pushing copies of the leftmost bit in from the left, and let the rightmost bits fall off	x >> 2

